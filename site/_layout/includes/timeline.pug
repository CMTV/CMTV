include /includes/icon

mixin timeline(timeline)
    .timelineBlock
        header
            i.fa-solid.fa-bars-staggered
            span Хронокарта
        .timeline
            -
                let monthPercent = (days) => { return (100 * days / 366) + '%'; };
                
                let months = [ ['янв', 31], ['фев', 29], ['мар', 31], ['апр', 30], ['май', 31], ['июн', 30], ['июл', 31], ['авг', 31], ['сен', 30], ['окт', 31], ['ноя', 30], ['дек', 31] ];
                    months = months.map(month => [month[0], monthPercent(month[1])]);

            .inner
            
                .corner
                
                .monthLabels
                    each month in months
                        .label(style= `flex-basis: ${month[1]}`)= month[0]

                .dataLabels
                    each groupRow, i in timeline.groupRows
                        .labelContainer
                            case groupRow.type
                                when 'project'
                                    .label.label--project
                                        a.icon(href= groupRow.data.link, title= groupRow.data.title)
                                            +icon(groupRow.data.icon)

                                when 'year'
                                    .label.label--year= groupRow.data
                            
                            - let j = 1;
                            while j < groupRow.rows.length
                                .extraRow
                                - j++;
                            
                        if (i !== timeline.groupRows.length - 1)
                            .sep
                
                .data
                    .monthGuides
                        each month in months
                            .guide(style= `flex-basis: ${month[1]}`)

                    .rows
                        each groupRow, i in timeline.groupRows
                            each row in groupRow.rows
                                .row
                                    each fragment in row.fragments
                                        .fragment(
                                            class= `${fragment.type} ${fragment.status} ${fragment.single ? 'single' : ''} goal-${fragment.goalNum}`
                                            style= `left: ${fragment.left}%; ` + (fragment.width ? `width: ${fragment.width}%;` : '')
                                        )
                                            if (fragment.showGoalNum)
                                                .marker(title!= fragment.label)= fragment.goalNum
                                            .rect(title!= fragment.label)

                            if (i !== timeline.groupRows.length - 1)
                                .sep