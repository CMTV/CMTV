@use 'sass:color';
@use 'sass:map';

@use 'defs/size';

@use 'includes/status';

@use 'partials/block';
@use 'partials/scroll';
@use 'partials/util';

.timelineBlock
{
    @extend %block;

    > header { @extend %blockPlainHeader; }
    > .timeline { border-top: 1px solid var(--c_border); }
}

.timeline
{
    --maxHeight:        320px;
    --minWidth:         700px;
    --labelWidth:       70px;
    --rowHeight:        30px;
    --dataEdgeSpace:    15px;

    //

    overflow: auto;
    max-height: var(--maxHeight);
    @extend %scrollbar;

    > .inner
    {
        display: grid;
        grid-template-columns: var(--labelWidth) auto;
        min-width: var(--minWidth);

        > .corner
        {
            position: sticky;
            top: 0; left: 0;
            z-index: 10;

            border: 1px solid var(--c_border);
            border-top: none;
            border-left: none;

            background: var(--c_bg);
        }

        > .monthLabels
        {
            position: sticky;
            top: 0;
            z-index: 5;

            display: flex;
            justify-content: space-around;
            height: var(--rowHeight);

            padding: 0 var(--dataEdgeSpace);

            background: var(--c_bg);
            border-bottom: 1px solid var(--c_border);

            > .label
            {
                @include util.flexCC;
                color: var(--c_text-shade-1);
                font-size: .9rem;
            }
        }

        > .dataLabels
        {
            position: sticky;
            left: 0;
            z-index: 5;

            display: flex;
            flex-direction: column;
            border-right: 1px solid var(--c_border);

            > .labelContainer
            {
                position: sticky;
                top: var(--rowHeight);
                background: var(--c_bg);
                padding: size.$gap 0;

                > .label
                {
                    height: var(--rowHeight);
                    @include util.flexCC;

                    &--year { font-weight: 600; }

                    &--project
                    {                        
                        > a.icon img
                        {
                            display: block;
                            @include util.size(var(--rowHeight));
                            border-radius: size.$borderRadius;
                        }
                    }
                }

                > .extraRow
                {
                    height: var(--rowHeight);
                    margin-top: size.$gap;
                }
            }

            > .sep { border-bottom: 1px solid var(--c_bg); }
        }

        > .data
        {
            position: relative;

            > .monthGuides
            {
                position: absolute;
                top: 0; left: 0;
                z-index: 1;
                
                display: flex;
                @include util.size(100%);
                padding: 0 var(--dataEdgeSpace);

                > .guide
                {
                    flex: 1;
                    border-right: 1px dashed var(--c_border);
                    &:first-of-type { border-left: 1px dashed var(--c_border); }
                }
            }

            > .rows
            {
                position: absolute;
                top: 0;
                left: var(--dataEdgeSpace);
                right: var(--dataEdgeSpace);
                z-index: 2;
                height: 100%;

                display: flex;
                flex-direction: column;
                gap: size.$gap;
                padding: size.$gap 0;

                > .sep { border-bottom: 1px dashed var(--c_border); }

                > .row
                {
                    position: relative;
                    height: var(--rowHeight);

                    > .fragment
                    {
                        position: absolute;
                        top: 0; height: 100%;
                        min-width: 4px;

                        > .marker
                        {
                            position: absolute;
                            top: -2px;

                            @include util.size(16px);
                            transform: translateX(-6px);

                            font-family: monospace;
                            font-weight: 600;
                            font-size: .9rem;
                            text-align: center;
                            line-height: 1;

                            &[title] { cursor: help; }
                        }
                        
                        > .rect
                        {
                            position: absolute;
                            bottom: 0; left: 0;
                            @include util.size(100%, 15px);

                            display: flex;
                            flex-direction: column;
                            justify-content: space-between;

                            border: 2px solid;
                            border-radius: size.$borderRadius;

                            &[title] { cursor: help; }
                        }

                        &.report
                        {
                            z-index: 3;

                            > .rect
                            {
                                border: none;
                                height: 9px;
                                bottom: 3px;
                            }
                        }

                        &.plan { > .rect { background: transparent; } }

                        @each $status in map.keys(status.$statusMap)
                        {
                            &.#{$status}
                            {
                                &.plan > .rect, &.planUnsure > .rect { border-color: status.getBorder($status); }
                                &.planUnsure > .rect { border-style: dashed; }

                                &.report > .rect    { background-color: status.getBg($status); }
                            }
                        }
                    }
                }
            }
        }
    }
}

// %fragment
// {
//     > .rect
//     {
//         position: absolute;
//         bottom: 0; left: 0;

//         @include util.size(100%, 14px);
//         border-radius: size.$borderRadius;

//         &[title] { cursor: help; }
//     }

//     &.single
//     {
//         width: 14px;
        
//         > .marker
//         {
//             height: calc(100% - 14px);
//             border-radius: 0;
//         }

//         > .rect
//         {
//             left: 1px;
//             z-index: 20;
//             border-radius: 50%;

//             transform: translateX(-50%);
//         }
//     }

//     &.fill { z-index: 5; }
//     &.wire { z-index: 10; }


// }