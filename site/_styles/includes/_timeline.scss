@use 'sass:color';

@use 'defs/size';

@use 'includes/status';

@use 'partials/block';
@use 'partials/scroll';
@use 'partials/util';

.timelineBlock
{
    @extend %block;

    > header { @extend %blockPlainHeader; }
    > .timeline { border-top: 1px solid var(--c_border); }
}

.timeline
{
    overflow: auto;
    @extend %scrollbar;
    
    max-height: 320px;
}

%fragment
{
    position: absolute;
    top: 0;
    height: 100%;


    > .marker
    {
        position: absolute;
        top: 0; left: 0;
        z-index: 5;

        height: 100%;

        border-left: 2px solid black;
        border-bottom-left-radius: size.$borderRadius;

        &[title] { cursor: help; }

        > .goalNum
        {
            position: relative;
            top: -2px; left: 5px;

            font-weight: 600;
            font-size: .9rem;
            line-height: 1;
        }
    }

    > .rect
    {
        position: absolute;
        bottom: 0; left: 0;

        @include util.size(100%, 14px);
        border-radius: size.$borderRadius;

        &[title] { cursor: help; }
    }

    &.single
    {
        width: 14px;
        
        > .marker
        {
            height: calc(100% - 14px);
            border-radius: 0;
        }

        > .rect
        {
            left: 1px;
            z-index: 20;
            border-radius: 50%;

            transform: translateX(-50%);
        }
    }

    &.fill { z-index: 5; }
    &.wire { z-index: 10; }

    @each $status, $color in status.$statusMap
    {
        &.#{$status}
        {
            > .marker       { border-color: $color; }
            &.wire > .rect  { border: 2px solid $color; }
            &.fill > .rect  { background-color: color.change($color, $alpha: .35); }
        }
    }
}

.timeline > .inner
{
    --rowHeight: 30px;
    --labelWidth: 70px;

    display: grid;
    grid-template-columns: var(--labelWidth) auto;

    min-width: 700px;

    > .hider
    {
        position: sticky;
        top: 0;
        left: 0;
        z-index: 10;

        border: 1px solid var(--c_border);
        border-top: none;
        border-left: none;

        background: var(--c_bg);
    }

    > .months
    {
        position: sticky;
        top: 0;
        z-index: 5;

        display: flex;
        justify-content: space-around;
        height: var(--rowHeight);

        background: var(--c_bg);

        border-bottom: 1px solid var(--c_border);

        > .month
        {
            @include util.flexCC;
            width: 35px;
            color: var(--c_text-shade-1);
            font-size: .9rem;
        }
    }

    > .labels
    {
        position: sticky;
        left: 0;
        z-index: 5;

        display: flex;
        flex-direction: column;
        gap: size.$gap;

        padding: size.$gap 0;

        background: var(--c_bg);
        border-right: 1px solid var(--c_border);

        > .label, > .vacant { height: var(--rowHeight); }

        > .label
        {
            position: sticky;
            top: var(--rowHeight);
            background: var(--c_bg);

            font-weight: 600;
            @include util.flexCC;

            &--project
            {
                top: calc(var(--rowHeight) + #{size.$gap});
                
                > a.icon img
                {
                    display: block;
                    @include util.size(var(--rowHeight));
                    border-radius: size.$borderRadius;
                }
            }
        }
    }

    > .data
    {
        position: relative;
        
        > .monthGuides
        {
            position: absolute;
            top: 0; left: 0;
            z-index: 1;
            @include util.size(100%);

            display: flex;
            
            > .guide
            {
                flex: 1;
                &:not(:last-of-type) { border-right: 1px solid var(--c_border); }
            }
        }

        > .rows
        {
            position: absolute;
            top: 0; left: 0;
            z-index: 2;
            @include util.size(100%);

            display: flex;
            flex-direction: column;
            gap: size.$gap; 

            padding: size.$gap 0;

            > .sep { border-bottom: 1px solid var(--c_border); }

            > .row
            {
                position: relative;
                height: var(--rowHeight);

                > .fragment { @extend %fragment; }
            }
        }
    }
}