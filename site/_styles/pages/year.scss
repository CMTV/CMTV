@use 'defs/size';
@use 'defs/bp';

@use 'includes/status';
@use 'includes/chart';
@use 'includes/timeline';

@use 'partials/block';
@use 'partials/counter';
@use 'partials/hover';
@use 'partials/toggle';
@use 'partials/scroll';
@use 'partials/util';

main > .yearResults
{
    @extend %block;

    > header
    {
        @extend %blockSection;
        font-size: 130%;
        font-weight: 600;
        border-bottom: 1px solid var(--c_border);
    }

    &.noResults > header { border-bottom: none; }

    > .results
    {
        max-height: 400px;
        @extend %scrollbar;

        > .result
        {
            @extend %blockSection;

            &:not(:first-of-type)
            {
                border-top: 1px solid var(--c_border);
            }

            display: grid;
            grid-template-columns: 50px auto;
            grid-template-rows: auto auto;
            column-gap: size.$gap;

            > .icon
            {
                grid-column: 1;
                grid-row: 1 / 3;
                align-self: center;

                display: flex;
                align-items: center;
                justify-content: center;

                > i
                {
                    color: var(--c_text-shade-1);
                    font-size: 35px;
                }

                > img
                {
                    border-radius: size.$borderRadius;
                    @include util.size(50px);
                }
            }

            > .title
            {
                display: flex;
                align-items: center;

                > a { @extend %underline; }
            }

            > .desc
            {
                color: var(--c_text-shade-1);
                font-size: 95%;
            }

            @include bp.max(mini)
            {
                grid-template-columns: 30px auto;
                row-gap: size.$gapSmall;

                > .icon
                {
                    grid-row: 1;
                    > i { font-size: 25px; }
                    > img { @include util.size(30px); }
                }

                > .desc
                {
                    grid-column: 1 / 3;
                    font-size: 100%;
                }
            }
        }
    }
}

main > .counters
{
    @extend %block;

    > header
    {
        @extend %blockSection;
        @extend %counters;

        > .counter
        {
            background: var(--c_bg);
            @include util.transition(background-color, color);

            &:hover, &[data-toggled]
            {
                color: var(--c_text);
                background: var(--c_bg-shade-2);
                cursor: pointer;
            }
        }
    }

    > .counterTitle
    {
        @extend %blockSep;
        border-top: 1px solid var(--c_border);
    }

    > .details
    {
        max-height: 350px;
        @extend %scrollbar;

        > .counterPane
        {
            @extend %toggle;

            &--default
            {
                @extend %paneDefault;
            }

            &--goal
            {
                @extend %paneGoal;
            }

            &--event
            {
                @extend %paneEvent;
            }
        }
    }
}

//
// Panes
//

%project
{
    display: flex;
    align-items: center;
    gap: size.$gap;
    padding: size.$gap;

    &:not(:last-of-type) { border-bottom: 1px solid var(--c_border); }

    > .count
    {
        font-family: monospace;
        font-size: 20px;
        font-weight: 600;
    }

    > .icon img
    {
        display: block;
        @include util.size(30px);
        border-radius: size.$borderRadius;
    }

    > .title
    {
        font-weight: 600;
        @extend %underline;
    }
}

%paneGoal
{
    > .counterItem
    {
        display: flex;
        flex-direction: column;

        &:last-of-type > .goals { border-bottom: none; }
        &:last-of-type > .project:not([data-toggled]) { border-bottom: none; }

        > .project
        {
            @extend %project;
            @include util.transition(background-color);

            &:hover
            {
                cursor: pointer;
                background: var(--c_bg-shade-1);
                > .eyeContainer { color: var(--c_text); }
            }

            > .eyeContainer
            {
                flex: 1;
                display: flex;
                justify-content: flex-end;
                color: var(--c_text-shade-1);
                @include util.transition(color);
            }
        }

        > .goals
        {
            padding: size.$gap;
            display: flex;
            flex-direction: column;
            gap: size.$gap;

            border-bottom: 1px solid var(--c_border);

            &:not([data-toggled]) { display: none; }

            > .goal
            {
                display: flex;
                gap: size.$gapSmall;

                > .pointer { color: var(--c_text-shade-1); }

                > .info
                {
                    flex: 1;

                    display: grid;
                    grid-template-columns: 1fr auto;
                    grid-template-rows: auto auto;
                    column-gap: size.$gapSmall;

                    > .date
                    {
                        position: relative;
                        top: 1px;
                        color: var(--c_text-shade-1);
                    }

                    > .progress
                    {
                        grid-row: 2;
                        grid-column: 1 / 3;

                        margin-top: 5px;

                        display: flex;
                        align-items: center;
                        gap: size.$gapSmall;

                        font-size: 0.85rem;

                        > .label { color: var(--c_text-shade-1); }

                        > .bar
                        {
                            flex: 1;

                            height: 10px;
                            background: var(--c_bg-shade-2);
                            border-radius: size.$borderRadius;
                            overflow: hidden;

                            > div
                            {
                                height: 100%;
                                background: status.getColor('done');
                            }
                        }
                    }
                }
            }
        }
    }
}

%paneEvent
{
    > .counterItem
    {
        display: grid;
        grid-template-columns: 1fr auto;
        grid-template-rows: auto 1fr;

        row-gap: size.$gapSmall;
        padding: size.$gap;

        &:not(:last-of-type) { border-bottom: 1px solid var(--c_border); }

        > .title    { font-weight: 600; }
        > .date     { color: var(--c_text-shade-1); }
        > .desc     { grid-column: 1 / 3; }
    }
}

%paneDefault
{
    > .counterItem
    {
        @extend %project;
        > .date { margin-left: auto; color: var(--c_text-shade-1); }
    }
}

//
//
//